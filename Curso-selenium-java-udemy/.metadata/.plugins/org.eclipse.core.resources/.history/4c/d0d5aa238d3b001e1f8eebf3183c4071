package testcases;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;

public class CasoCarrito extends Base {
	
	@BeforeSuite
	public void abrirNavegador() {
		navegador.get("http://www.automationpractice.pl/index.php");
		navegador.manage().timeouts().implicitlyWait(3,TimeUnit.SECONDS);
		Dimension driverSize = new Dimension(480,615);
	}
	
	@Test
	public void elegirArticulosAzarCarritoCompras() {
		Assert.assertEquals(navegador.getTitle(),"My Shop");
		navegador.findElement(By.xpath("//*[@id=\"home-page-tabs\"]/li[2]/a")).click();
		WebElement contenedorDeProductos = navegador.findElement(By.id("blockbestsellers"));
		listaProductos = contenedorDeProductos.findElements(By.tagName("li"));
		//System.out.println(listaProductos.size()); 6
		
		if(listaProductos.size()<4) {
			cantidadLista = listaProductos.size();
		}else {
			cantidadLista = 3;
		}
		
		for(int i=0; i<cantidadLista;i++) {
			numeroAlAzar = (int) (Math.random()*listaProductos.size() +1);
			if(productosAlAzar.contains(numeroAlAzar)) {
				i--;
			}else {
				productosAlAzar.add(numeroAlAzar);
			}
		}
		
		productosAlAzar.forEach(System.out::println);
		
		
	}
	
	@Test(dependsOnMethods = {"elegirArticulosAzarCarritoCompras"})
	public void anadirProductosAlCarrito() {
		for(int i= 0 ; i < cantidadLista; i++ ) {
			
		}
	}
	
	@AfterSuite
	public void cerrarNavegador() {
		navegador.close();
	}

}
